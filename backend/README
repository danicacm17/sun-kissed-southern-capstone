# 🌞 Sun-Kissed & Southern — Backend API

[![🚀 Live Backend (Render)](https://img.shields.io/badge/Backend-Live--API-4e4e4e?style=for-the-badge&logo=flask&logoColor=white)](https://sun-kissed-backend.onrender.com)

This is the **Flask-based backend** powering [Sun-Kissed & Southern](https://sun-kissed-and-southern.netlify.app), a modern e-commerce platform for Florida beach-inspired apparel. It includes full support for authentication, order management, discounts, returns, and admin dashboards.

---

## 🚀 Features

- 🔐 JWT authentication + role-based access (`admin`, `user`, `fulfillment`, `customer_service`)
- 👕 Product, variant, and inventory management
- 🛒 Full checkout + coupon logic (Cardknox sandbox mode)
- 🔁 Returns and refunds (w/ optional restock)
- 💬 Product reviews (with moderation)
- 💖 Favorites system
- 📊 Admin analytics: low stock, top customers, revenue
- 📚 Lifestyle blog with optional weather widget

---

## 🛠️ Tech Stack

- Python 3.12 + Flask (REST API)
- PostgreSQL + SQLAlchemy ORM
- JWT via `flask-jwt-extended`
- Alembic + Flask-Migrate
- Pytest for testing
- Deployed via **Render**
---

## 📁 Project Structure

```
backend/
├── app/
│   ├── models/
│   ├── routes/
│   ├── __tests__/
│   ├── utils/
├── run.py
├── seed.py
├── migrations/
├── requirements.txt
└── README.md
```

---

## 💻 Getting Started

### 1. Clone + Set Up Virtual Environment

```bash
git clone https://github.com/danicacm17/sun-kissed-southern.git
cd sun-kissed-southern/backend
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
```

### 2. Create `.env` File

```ini
FLASK_APP=run.py
FLASK_ENV=development
SECRET_KEY=your-secret-key
JWT_SECRET_KEY=your-jwt-secret
DATABASE_URL=postgresql:///sun_kissed_db
SQLALCHEMY_DATABASE_URI=postgresql:///sun_kissed_db
CARDKNOX_ENV=sandbox
CARDKNOX_API_KEY=your-cardknox-sandbox-key
KD100_API_KEY=your-kd100-key
KD100_SECRET=your-kd100-secret
```

### 3. Initialize the Database

```bash
flask db upgrade
```

Or manually seed:

```bash
python seed.py
```
---

## 🧪 Run Tests

```bash
PYTHONPATH=. pytest
```

All test files are located in `app/__tests__/`.

---

## 🔐 Key Endpoints

| Method | Endpoint                            | Description                     |
|--------|-------------------------------------|---------------------------------|
| POST   | `/api/auth/login`                   | Authenticate user               |
| GET    | `/api/products`                     | List all products               |
| POST   | `/api/checkout`                     | Process order + Cardknox token  |
| GET    | `/api/admin/analytics`              | Admin analytics dashboard       |
| POST   | `/api/admin/products`               | Admin: create product           |
| GET    | `/api/blog`                         | Public blog content             |
| GET    | `/api/coupons/validate`             | Validate discount code          |

---

## 🛒 Cart Storage

Cart is stored **entirely in localStorage** on the frontend. Users may shop and check out as guests. No backend cart persistence is required.

---

## 📦 Admin Analytics

Accessible via `/api/admin/analytics`, the analytics endpoint includes:

- 📍 Orders grouped by city
- 📈 Revenue trends by day
- 🥇 Top customers
- 🚨 Low stock alerts
- 📬 Fulfillment summary by order

---

## 🏁 Deployment Status

- ✅ Backend fully complete and deployed via Render  
- ✅ All tests pass via `pytest`  
- ✅ Connected to frontend (Netlify) and production-ready

---

## 👤 Author

**Danica Murphy**  
GitHub: [@danicacm17](https://github.com/danicacm17)
